plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.google.protobuf'
    id 'idea'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.clearkeep.ck"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 42
        versionName "1.42-ui"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
                /*arguments += ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]*/
            }
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions "version"
    productFlavors {
        prod {
            dimension "version"
            resValue 'string', 'app_name', "ClearKeep"
            buildConfigField "String", 'BASE_URL', "\"54.235.68.160\""
            buildConfigField "int", 'PORT', "5000"
            buildConfigField "String", 'BASE_JANUS_URL', "\"54.235.68.160\""
            buildConfigField "int", 'JANUS_PORT', "8188"
        }
        staging {
            dimension "version"
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
            resValue 'string', 'app_name', "CK Stag"
            buildConfigField "String", 'BASE_URL', "\"54.235.68.160\""
            buildConfigField "int", 'PORT', "25000"
            buildConfigField "String", 'BASE_JANUS_URL', "\"54.235.68.160\""
            buildConfigField "int", 'JANUS_PORT', "18188"
        }
        dev {
            dimension "version"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            resValue 'string', 'app_name', "CK Dev"
            buildConfigField "String", 'BASE_URL', "\"54.235.68.160\""
            buildConfigField "int", 'PORT', "25000"
            buildConfigField "String", 'BASE_JANUS_URL', "\"54.235.68.160\""
            buildConfigField "int", 'JANUS_PORT', "28188"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    buildFeatures {
        compose true
        viewBinding true
    }

    sourceSets.main {
        jniLibs.srcDir 'libs'
        jni.srcDirs = []
    }

    composeOptions {
        kotlinCompilerVersion "$kotlin_version"
        kotlinCompilerExtensionVersion "$jetpack_compose_version"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    packagingOptions{
        exclude("META-INF/jersey-module-version")
    }
}
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.11.4'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.27.1'
        }
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }

            task.plugins {
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xskip-prerelease-check"]
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.3.0-beta01'
    implementation 'com.google.android.material:material:1.3.0'
    implementation('androidx.activity:activity-ktx:1.1.0')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'
    implementation 'com.google.code.gson:gson:2.8.6'

    // architect components
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"

    // Jetpack Compose
    implementation "androidx.activity:activity-compose:1.3.0-alpha06"
    implementation "androidx.compose.compiler:compiler:$jetpack_compose_version"
    implementation("androidx.compose.runtime:runtime:$jetpack_compose_version")
    implementation "androidx.navigation:navigation-compose:$navComposeVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$jetpack_compose_version"
    implementation("androidx.compose.ui:ui:$jetpack_compose_version")
    implementation("androidx.compose.material:material-icons-core:$jetpack_compose_version")
    implementation("androidx.compose.material:material-icons-extended:$jetpack_compose_version")
    implementation("androidx.compose.material:material:$jetpack_compose_version")
    implementation("androidx.compose.foundation:foundation:$jetpack_compose_version")
    implementation "androidx.compose.foundation:foundation-layout:$jetpack_compose_version"
    implementation("androidx.compose.animation:animation:$jetpack_compose_version")
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha05"
    implementation "androidx.compose.ui:ui-tooling:$jetpack_compose_version"

    // gRPC
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation "io.grpc:grpc-stub:$grpcVersion"
    implementation "io.grpc:grpc-okhttp:$grpcVersion"
    implementation("io.grpc:grpc-protobuf-lite:$grpcVersion") {
        exclude module: "protobuf-lite"
    }
    //Signal
    implementation("org.whispersystems:signal-protocol-android:$signal_version") {
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    // Room components
    implementation "androidx.room:room-runtime:$room_db_version"
    implementation "androidx.room:room-ktx:$room_db_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt "androidx.room:room-compiler:$room_db_version"
    androidTestImplementation "androidx.room:room-testing:$room_db_version"

    // dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$rootProject.assistedInjectVersion"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$rootProject.assistedInjectVersion"
    implementation "com.google.dagger:hilt-android:$rootProject.hiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$rootProject.hiltViewModelVersion"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"
    kapt "androidx.hilt:hilt-compiler:$rootProject.hiltViewModelVersion"

    // firebase
    implementation 'com.google.firebase:firebase-messaging-ktx:21.0.0'
    implementation 'com.google.firebase:firebase-analytics-ktx:18.0.0'
    implementation 'com.google.android.gms:play-services-auth:19.0.0'

    // Test
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // janus
    implementation project(':januswrapper')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation(name:'libwebrtc', ext:'aar')
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    implementation 'com.microsoft.identity.client:msal:2.0.8'
    implementation 'com.facebook.android:facebook-android-sdk:8.2.0'

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'jp.wasabeef:glide-transformations:4.0.0'
    implementation 'net.colindodd:toggleimagebutton:1.2'

    implementation "com.google.accompanist:accompanist-coil:0.9.0"
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.9.0"
    implementation "com.google.accompanist:accompanist-insets:0.9.0"
    implementation "com.google.accompanist:accompanist-swiperefresh:0.9.0"

    implementation 'com.googlecode.libphonenumber:libphonenumber:8.2.0'
}

